generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model CV {
  id        String   @id @default(uuid()) @db.Uuid
  filename  String   @unique @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Experience {
  id          String    @id @default(uuid()) @db.Uuid
  company     String    @db.Text
  position    String    @db.Text
  startDate   Int       @db.Integer  // Stores as epoch seconds
  endDate     Int?      @db.Integer  // Stores as epoch seconds
  description String[]  
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Project {
  id             String   @id @default(uuid()) @db.Uuid
  year           String   @db.Text
  platform       String   @db.Text // 'mobile' or 'website'
  tag            String   @db.Text
  project_name   String   @db.Text
  description    String   @db.Text // JSON string of string[]
  link_appstore  String?  @db.Text
  link_playstore String?  @db.Text
  link_website   String?  @db.Text
  display        String   @db.Text // thumbnail image path
  bucket         String   @db.Text // folder name under uploads/projects
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@unique([bucket, project_name])
}

model ProjectImage {
  id          String   @id @default(uuid()) @db.Uuid
  bucket      String   @db.Text // Reference to project's bucket
  filename    String   @db.Text
  isFeatured  Boolean  @default(false)
  isThumbnail Boolean  @default(false)
  order       Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([bucket, filename])
  @@index([bucket])
}

model User {
  id        String   @id @default(uuid()) @db.Uuid
  email     String   @unique @db.Text
  password  String   @db.Text
  role      String   @default("user") // "user" or "admin"
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
